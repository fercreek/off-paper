{"version":3,"sources":["../../../../server/api/purchase/purchase.integration.js"],"names":[],"mappings":"AAAA;;AAGA;;;;;;AADA,IAAI,MAAM,QAAQ,OAAR,CAAV;;;AAGA,IAAI,WAAJ;;AAEA,SAAS,eAAT,EAA0B,YAAW;;AAEnC,WAAS,oBAAT,EAA+B,YAAW;AACxC,QAAI,SAAJ;;AAEA,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,gBADP,EAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD,oBAAY,IAAI,IAAhB;AACA;AACD,OAVH;AAWD,KAZD;;AAcA,OAAG,gCAAH,EAAqC,YAAW;AAC9C,gBAAU,MAAV,CAAiB,EAAjB,CAAoB,UAApB,CAA+B,KAA/B;AACD,KAFD;AAID,GArBD;;AAuBA,WAAS,qBAAT,EAAgC,YAAW;AACzC,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,IADH,CACQ,gBADR,EAEG,IAFH,CAEQ;AACJ,cAAM,cADF;AAEJ,cAAM;AAFF,OAFR,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD,sBAAc,IAAI,IAAlB;AACA;AACD,OAdH;AAeD,KAhBD;;AAkBA,OAAG,gDAAH,EAAqD,YAAW;AAC9D,kBAAY,IAAZ,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,cAA9B;AACA,kBAAY,IAAZ,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,mCAA9B;AACD,KAHD;AAKD,GAxBD;;AA0BA,WAAS,wBAAT,EAAmC,YAAW;AAC5C,QAAI,QAAJ;;AAEA,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,oBAAoB,YAAY,GADvC,EAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD,mBAAW,IAAI,IAAf;AACA;AACD,OAVH;AAWD,KAZD;;AAcA,cAAU,YAAW;AACnB,iBAAW,EAAX;AACD,KAFD;;AAIA,OAAG,4CAAH,EAAiD,YAAW;AAC1D,eAAS,IAAT,CAAc,MAAd,CAAqB,KAArB,CAA2B,cAA3B;AACA,eAAS,IAAT,CAAc,MAAd,CAAqB,KAArB,CAA2B,mCAA3B;AACD,KAHD;AAKD,GA1BD;;AA4BA,WAAS,wBAAT,EAAmC,YAAW;AAC5C,QAAI,eAAJ;;AAEA,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,oBAAoB,YAAY,GADvC,EAEG,IAFH,CAEQ;AACJ,cAAM,kBADF;AAEJ,cAAM;AAFF,OAFR,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAS,GAAT,EAAc,GAAd,EAAmB;AACtB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD,0BAAkB,IAAI,IAAtB;AACA;AACD,OAdH;AAeD,KAhBD;;AAkBA,cAAU,YAAW;AACnB,wBAAkB,EAAlB;AACD,KAFD;;AAIA,OAAG,0CAAH,EAA+C,YAAW;AACxD,sBAAgB,IAAhB,CAAqB,MAArB,CAA4B,KAA5B,CAAkC,kBAAlC;AACA,sBAAgB,IAAhB,CAAqB,MAArB,CAA4B,KAA5B,CAAkC,iCAAlC;AACD,KAHD;AAKD,GA9BD;;AAgCA,WAAS,2BAAT,EAAsC,YAAW;;AAE/C,OAAG,+CAAH,EAAoD,UAAS,IAAT,EAAe;AACjE,+BAAQ,GAAR,EACG,MADH,CACU,oBAAoB,YAAY,GAD1C,EAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD;AACD,OARH;AASD,KAVD;;AAYA,OAAG,sDAAH,EAA2D,UAAS,IAAT,EAAe;AACxE,+BAAQ,GAAR,EACG,MADH,CACU,oBAAoB,YAAY,GAD1C,EAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP;AACD;AACD;AACD,OARH;AASD,KAVD;AAYD,GA1BD;AA4BD,CA3ID","file":"purchase.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newPurchase;\n\ndescribe('Purchase API:', function() {\n\n  describe('GET /api/purchases', function() {\n    var purchases;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/purchases')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          purchases = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      purchases.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/purchases', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/purchases')\n        .send({\n          name: 'New Purchase',\n          info: 'This is the brand new purchase!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newPurchase = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created purchase', function() {\n      newPurchase.name.should.equal('New Purchase');\n      newPurchase.info.should.equal('This is the brand new purchase!!!');\n    });\n\n  });\n\n  describe('GET /api/purchases/:id', function() {\n    var purchase;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/purchases/' + newPurchase._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          purchase = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      purchase = {};\n    });\n\n    it('should respond with the requested purchase', function() {\n      purchase.name.should.equal('New Purchase');\n      purchase.info.should.equal('This is the brand new purchase!!!');\n    });\n\n  });\n\n  describe('PUT /api/purchases/:id', function() {\n    var updatedPurchase;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/purchases/' + newPurchase._id)\n        .send({\n          name: 'Updated Purchase',\n          info: 'This is the updated purchase!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPurchase = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPurchase = {};\n    });\n\n    it('should respond with the updated purchase', function() {\n      updatedPurchase.name.should.equal('Updated Purchase');\n      updatedPurchase.info.should.equal('This is the updated purchase!!!');\n    });\n\n  });\n\n  describe('DELETE /api/purchases/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/purchases/' + newPurchase._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when purchase does not exist', function(done) {\n      request(app)\n        .delete('/api/purchases/' + newPurchase._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}