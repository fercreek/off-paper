{"version":3,"sources":["../../../../server/api/person/person.integration.js"],"names":[],"mappings":"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","file":"person.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newPerson;\n\ndescribe('Person API:', function() {\n\n  describe('GET /api/persons', function() {\n    var persons;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/persons')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          persons = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      persons.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/persons', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/persons')\n        .send({\n          name: 'New Person',\n          info: 'This is the brand new person!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newPerson = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created person', function() {\n      newPerson.name.should.equal('New Person');\n      newPerson.info.should.equal('This is the brand new person!!!');\n    });\n\n  });\n\n  describe('GET /api/persons/:id', function() {\n    var person;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/persons/' + newPerson._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          person = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      person = {};\n    });\n\n    it('should respond with the requested person', function() {\n      person.name.should.equal('New Person');\n      person.info.should.equal('This is the brand new person!!!');\n    });\n\n  });\n\n  describe('PUT /api/persons/:id', function() {\n    var updatedPerson;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/persons/' + newPerson._id)\n        .send({\n          name: 'Updated Person',\n          info: 'This is the updated person!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPerson = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPerson = {};\n    });\n\n    it('should respond with the updated person', function() {\n      updatedPerson.name.should.equal('Updated Person');\n      updatedPerson.info.should.equal('This is the updated person!!!');\n    });\n\n  });\n\n  describe('DELETE /api/persons/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/persons/' + newPerson._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when person does not exist', function(done) {\n      request(app)\n        .delete('/api/persons/' + newPerson._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}