{"version":3,"sources":["../../../../server/api/person/person.model.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;AAEA,IAAI,eAAe,IAAI,mBAAS,MAAb,CAAoB;AACrC,YAAU,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAA+B,QAAQ,IAAvC,EAD2B;AAErC,cAAY,MAFyB;AAGrC,aAAW,MAH0B;AAIrC,SAAO,MAJ8B;AAKrC,aAAW,IAL0B;AAMrC,SAAO,CAAC,EAAC,MAAM,mBAAS,MAAT,CAAgB,KAAhB,CAAsB,QAA7B,EAAuC,KAAK,MAA5C,EAAD,CAN8B;AAOrC,cAAY,IAPyB;AAQrC,cAAY;AARyB,CAApB,CAAnB;;AAWA,aAAa,GAAb,CAAiB,MAAjB,EAAyB,UAAU,IAAV,EAAgB;;AAEvC,MAAI,cAAc,IAAI,IAAJ,EAAlB;;;AAGA,OAAK,UAAL,GAAkB,WAAlB;;;AAGA,MAAI,CAAC,KAAK,UAAV,EACE,KAAK,UAAL,GAAkB,WAAlB;;AAEF;AACD,CAZD;;kBAce,mBAAS,KAAT,CAAe,QAAf,EAAyB,YAAzB,C","file":"person.model.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nimport Card from '../card/card.model';\n\nvar PersonSchema = new mongoose.Schema({\n  username: {type: String, required: true, unique: true},\n  first_name: String,\n  last_name: String,\n  email: String,\n  birthdate: Date,\n  cards: [{type: mongoose.Schema.Types.ObjectId, ref: 'Card'}],\n  created_at: Date,\n  updated_at: Date\n});\n\nPersonSchema.pre('save', function (next) {\n  // get the current date\n  var currentDate = new Date();\n  \n  // change the updated_at field to current date\n  this.updated_at = currentDate;\n\n  // if created_at doesn't exist, add to that field\n  if (!this.created_at)\n    this.created_at = currentDate;\n\n  next();\n});\n\nexport default mongoose.model('Person', PersonSchema);\n"]}